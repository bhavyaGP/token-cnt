## index.test.js

```javascript
const express = require('express');
const app = express();
const PORT = 3000;
const idCounter = 1;

let DB = []; // In-memory database

describe('API Routes', () => {
  describe('Create Item', () => {
    it('should create a new item with valid data', async () => {
      const newItem = { id: idCounter++, name: 'New Item' };
      const res = await app.post('/items', newItem);
      expect(res.status).toBe(201);
      expect(res.json()).toEqual(newItem);
    });
  });

  describe('Get All Items', () => {
    it('should return all existing items', async () => {
      const res = await app.get('/items');
      expect(res.status).toBe(200);
      expect(res.json()).toEqual(DB);
    });
  });

  describe('Get Item by ID', () => {
    it('should return the item with matching ID', async () => {
      const item = DB.find(i => i.id === 1);
      const res = await app.get('/items/:id', item.id);
      expect(res.status).toBe(200);
      expect(res.json()).toEqual(item);
    });
  });

  describe('Update Item by ID', () => {
    it('should update the item with matching ID', async () => {
      const index = DB.findIndex(i => i.id === 1);
      const updatedItem = { id: 1, name: 'Updated Item' };
      await app.put('/items/:id', updatedItem, 1);
      expect(res.status).toBe(200);
      expect(res.json()).toEqual(updatedItem);
    });
  });

  describe('Delete Item by ID', () => {
    it('should remove the item with matching ID', async () => {
      const index = DB.findIndex(i => i.id === 1);
      await app.delete('/items/:id', index);
      expect(res.status).toBe(204);
      expect(DB.length).toBe(2);
    });
  });

  app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
  });
});
```{"model":"gemma:2b","created_at":"2025-09-05T09:22:43.9300629Z","response":"","done":true,"done_reason":"stop","context":[968,2997,235298,559,235298,15508,235313,1645,109,2045,708,671,13865,6815,8603,20409,235265,108,6922,3356,603,577,11941,106434,578,77248,1615,4663,4982,235283,46092,7782,604,573,18447,10098,235265,109,15628,123931,36192,4637,108,634,25247,15233,235292,3921,235265,2833,108,1325,7055,589,2817,1101,15839,14094,108,1325,1059,589,7055,2640,108,1325,33034,589,235248,235304,235276,235276,235276,983,108,235316,108,1217,235265,1589,235278,15839,235265,3327,2629,2723,170829,577,11298,11384,235316,108,235316,108,1243,13986,589,7575,2723,878,235290,19541,8746,235316,108,1243,807,17321,589,235248,235274,235289,2723,13702,4781,22997,235316,108,235316,108,634,77678,728,4463,476,888,2599,235316,108,1217,235265,2729,8854,7325,920,591,5071,235269,1004,235275,1236,1608,108,139,1325,146461,589,612,807,235292,807,17321,58073,2804,5071,235265,2168,65936,108,139,4994,235265,4258,235278,117429,1481,108,139,624,235265,3325,235278,235284,235276,235274,846,3327,235278,117429,1481,108,5016,108,235316,108,634,19401,728,3512,832,5100,235316,108,1217,235265,818,8854,7325,920,591,5071,235269,1004,235275,1236,1608,108,139,624,235265,3327,235278,4994,1481,108,5016,108,235316,108,634,19401,728,3512,2599,731,4781,235316,108,1217,235265,818,8854,7325,28729,539,920,591,5071,235269,1004,235275,1236,1608,108,139,1325,2599,589,13986,235265,3655,235278,235252,1236,496,235265,539,4637,33994,235278,5071,235265,5152,235265,539,12142,108,139,648,2883,884,235275,2203,1004,235265,3325,235278,235310,235276,235310,846,3327,2268,3969,235292,777,2152,780,1942,235303,71936,108,139,624,235265,3327,235278,884,1481,108,5016,108,235316,108,634,48118,728,88818,2599,731,4781,235316,108,1217,235265,1065,8854,7325,28729,539,920,591,5071,235269,1004,235275,1236,1608,108,139,1325,3921,589,13986,235265,150319,235278,235252,1236,496,235265,539,4637,33994,235278,5071,235265,5152,235265,539,12142,108,139,648,591,2633,4637,728,235274,235275,2203,1004,235265,3325,235278,235310,235276,235310,846,3327,2268,3969,235292,777,2152,780,1942,235303,71936,108,235316,108,139,4994,235309,2633,235307,589,612,807,235292,13986,235309,2633,1964,539,235269,2804,5071,235265,2168,65936,108,139,624,235265,3327,235278,4994,235309,2633,24833,108,5016,108,235316,108,634,54304,728,17691,2599,731,4781,235316,108,1217,235265,4958,8854,7325,28729,539,920,591,5071,235269,1004,235275,1236,1608,108,139,1325,3921,589,13986,235265,150319,235278,235252,1236,496,235265,539,4637,33994,235278,5071,235265,5152,235265,539,12142,108,139,648,591,2633,4637,728,235274,235275,2203,1004,235265,3325,235278,235310,235276,235310,846,3327,2268,3969,235292,777,2152,780,1942,235303,71936,108,235316,108,139,1325,15225,2152,589,13986,235265,44582,235278,2633,235269,235248,235274,1481,108,139,624,235265,3327,235278,30465,2152,235309,235276,24833,108,5016,108,235316,108,1217,235265,18998,235278,6347,235269,3022,1236,1608,108,139,3705,235265,937,13871,7538,603,5327,611,4494,1336,20156,115707,6347,16027,1481,108,859,108,15628,123931,16960,4637,109,12736,80401,235292,108,235290,5362,476,5354,22978,8603,15087,591,123161,16841,731,3097,235269,901,188629,235283,192142,689,18230,644,708,22012,1013,82780,603,780,476,3806,846,108,235290,21708,7782,8886,675,12637,235283,500,591,483,2121,235275,13854,578,28829,31017,235265,108,235290,17298,832,52996,7257,235269,8250,235269,578,573,10098,235303,235256,2294,8409,235265,108,235290,29034,6222,591,14031,235275,4381,235269,8322,4381,235269,578,8541,4381,235265,108,235290,51250,3333,13404,578,3772,20624,21662,235265,108,235290,23786,2004,614,203862,675,777,28745,2121,235303,575,476,5039,13116,235265,2833,10021,235265,109,208728,1148,24493,108240,85280,591,63878,1245,108,235290,1927,573,10098,21800,671,17852,235283,16466,235250,235283,72247,5816,1059,5566,235269,1635,665,2177,573,5463,8761,3703,4646,3582,578,1281,777,3388,2195,235303,591,483,573,1546,3818,24493,235290,14319,9581,604,674,15087,846,108,235290,8512,6544,2409,8750,63572,6673,685,7257,235265,16670,235269,58142,24493,12557,591,235249,235265,235264,1173,2177,2557,2195,846,108,235290,5362,8102,235283,7677,604,3853,9712,578,24450,611,1004,235265,3325,1148,1004,235265,2168,591,483,1004,235265,36465,846,109,2049,51082,724,55383,235277,235292,108,235290,23023,1635,573,10098,2177,573,4646,8761,3703,235292,2817,61731,5720,235283,2633,235265,2833,1685,108,235290,14309,5942,8603,8112,685,4880,591,235249,235265,235264,1173,2557,2195,235269,68777,235269,66413,846,108,235290,30794,9774,43634,1185,8348,235265,109,39069,83003,591,146678,50647,1245,108,235290,16230,30565,8336,2121,3409,235265,108,235290,1307,44353,235269,4703,235269,689,143830,2062,1317,573,86890,2121,2482,3381,235265,108,107,235248,108,235322,2997,235298,559,235298,15508,235313,2516,108,1620,3921,235265,2195,235265,2833,109,1917,19675,108,1325,7055,589,2817,1101,15839,2357,108,1325,1059,589,7055,821,108,1325,33034,589,235248,235304,235276,235276,235276,235289,108,1325,807,17321,589,235248,235274,235289,109,1243,13986,589,7575,2723,878,235290,19541,8746,109,15019,1101,9090,39446,920,3022,1236,612,108,139,15019,1101,4912,10230,920,3022,1236,612,108,141,500,1101,9727,3104,476,888,2599,675,4819,1423,920,8102,3022,1236,612,108,143,1325,146461,589,612,807,235292,807,17321,58073,1503,235292,777,2441,10230,235303,9520,108,143,1325,1004,589,7785,1059,235265,2729,8854,7325,920,146461,594,108,143,7089,235278,624,235265,3325,846,20701,235278,235284,235276,235274,594,108,143,7089,235278,624,235265,3327,16327,33396,235278,117429,594,108,141,859,108,139,859,109,139,15019,1101,2394,2262,28088,920,3022,1236,612,108,141,500,1101,9727,2203,832,7881,5100,920,8102,3022,1236,612,108,143,1325,1004,589,7785,1059,235265,818,8854,7325,2357,108,143,7089,235278,624,235265,3325,846,20701,235278,235284,235276,235276,594,108,143,7089,235278,624,235265,3327,16327,33396,235278,4994,594,108,141,859,108,139,859,109,139,15019,1101,2394,10230,731,4781,920,3022,1236,612,108,141,500,1101,9727,2203,573,2599,675,19947,4781,920,8102,3022,1236,612,108,143,1325,2599,589,13986,235265,3655,235278,235252,1236,496,235265,539,4637,235248,235274,594,108,143,1325,1004,589,7785,1059,235265,818,8854,7325,28729,539,920,2599,235265,539,594,108,143,7089,235278,624,235265,3325,846,20701,235278,235284,235276,235276,594,108,143,7089,235278,624,235265,3327,16327,33396,235278,884,594,108,141,859,108,139,859,109,139,15019,1101,5534,10230,731,4781,920,3022,1236,612,108,141,500,1101,9727,4601,573,2599,675,19947,4781,920,8102,3022,1236,612,108,143,1325,3921,589,13986,235265,150319,235278,235252,1236,496,235265,539,4637,235248,235274,594,108,143,1325,9894,2152,589,612,807,235292,235248,235274,235269,1503,235292,777,17701,10230,235303,9520,108,143,7677,1059,235265,1065,8854,7325,28729,539,920,9894,2152,235269,235248,235274,594,108,143,7089,235278,624,235265,3325,846,20701,235278,235284,235276,235276,594,108,143,7089,235278,624,235265,3327,16327,33396,235278,16041,2152,594,108,141,859,108,139,859,109,139,15019,1101,8560,10230,731,4781,920,3022,1236,612,108,141,500,1101,9727,6504,573,2599,675,19947,4781,920,8102,3022,1236,612,108,143,1325,3921,589,13986,235265,150319,235278,235252,1236,496,235265,539,4637,235248,235274,594,108,143,7677,1059,235265,4958,8854,7325,28729,539,920,3921,594,108,143,7089,235278,624,235265,3325,846,20701,235278,235284,235276,235310,594,108,143,7089,235278,4994,235265,2737,846,20701,235278,235284,594,108,141,859,108,139,859,109,139,1217,235265,18998,235278,6347,235269,3022,1236,612,108,141,3705,235265,937,13871,7538,603,5327,611,4494,1336,20156,115707,6347,45880,108,139,859,108,859,108,1917],"total_duration":7771423200,"load_duration":63680800,"prompt_eval_count":877,"prompt_eval_duration":276216700,"eval_count":558,"eval_duration":7430605600}